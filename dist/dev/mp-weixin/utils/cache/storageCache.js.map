{"version":3,"file":"storageCache.js","sources":["../../../../../src/utils/cache/storageCache.ts"],"sourcesContent":["import { cacheCipher } from '@/settings/encryptionSetting';\nimport type { EncryptionParams } from '@/utils/cipher';\nimport { AesEncryption } from '@/utils/cipher';\nimport { isNullOrUnDef } from '@/utils/is';\n\nexport interface CreateStorageParams extends EncryptionParams {\n  prefixKey: string\n  hasEncrypt: boolean\n  timeout?: number | null\n}\nexport function createStorage({\n  prefixKey = '',\n  key = cacheCipher.key,\n  iv = cacheCipher.iv,\n  timeout = null,\n  hasEncrypt = true,\n}: Partial<CreateStorageParams> = {}) {\n  if (hasEncrypt && [key.length, iv.length].some(item => item !== 16)) {\n    throw new Error('When hasEncrypt is true, the key or iv must be 16 bits!');\n  }\n\n  const encryption = new AesEncryption({ key, iv });\n\n  /**\n   * Cache class\n   * Construction parameters can be passed into sessionStorage, localStorage,\n   * @class Cache\n   * @example\n   */\n  class Storage {\n    private prefixKey?: string;\n\n    private encryption: AesEncryption;\n\n    private hasEncrypt: boolean;\n\n    constructor() {\n      this.prefixKey = prefixKey;\n      this.encryption = encryption;\n      this.hasEncrypt = hasEncrypt;\n    }\n\n    private getKey(key: string) {\n      return `${this.prefixKey}${key}`.toUpperCase();\n    }\n\n    /**\n     * Set cache\n     * @param {string} key\n     * @param {*} value\n     * @param {*} expire Expiration time in seconds\n     * @memberof Cache\n     */\n    set(key: string, value: any, expire: number | null = timeout) {\n      try {\n        const stringData = JSON.stringify({\n          value,\n          time: Date.now(),\n          expire: !isNullOrUnDef(expire) ? new Date().getTime() + expire * 1000 : null,\n        });\n        const stringifyValue = this.hasEncrypt ? this.encryption.encryptByAES(stringData) : stringData;\n        uni.setStorageSync(this.getKey(key), stringifyValue);\n      } catch (err) {\n        throw new Error(`setStorageSync error: ${err}`);\n      }\n    }\n\n    /**\n     * Read cache\n     * @param {string} key\n     * @param {*} def\n     * @memberof Cache\n     */\n    get<T = any>(key: string, def: any = null): T {\n      const val = uni.getStorageSync(this.getKey(key));\n      if (!val)\n        return def;\n\n      try {\n        const decVal = this.hasEncrypt ? this.encryption.decryptByAES(val) : val;\n        const data = JSON.parse(decVal);\n        const { value, expire } = data;\n        if (isNullOrUnDef(expire) || expire < new Date().getTime()) {\n          this.remove(key);\n          return def;\n        }\n        return value;\n        // eslint-disable-next-line unused-imports/no-unused-vars\n      } catch (e) {\n        return def;\n      }\n    }\n\n    /**\n     * Delete cache based on key\n     * @param {string} key\n     * @memberof Cache\n     */\n    remove(key: string) {\n      uni.removeStorageSync(this.getKey(key));\n    }\n\n    /**\n     * Delete all caches of this instance\n     */\n    clear(): void {\n      uni.clearStorageSync();\n    }\n  }\n  return new Storage();\n}\n"],"names":["cacheCipher","AesEncryption","key","isNullOrUnDef","uni"],"mappings":";;;;AAUO,MAAA,gBAAA,QAAA,wBAAA,GAAA,6BAAA,QAAA,qCAAA,GAAA,eAAA,QAAA,cAAA,GAAA,WAAA,QAAA,UAAA;AAAA,SAAS,cAAc;AAAA,EAC5B,YAAY;AAAA,EACZ,MAAMA,2BAAY,EAAA;AAAA,EAClB,KAAKA,2BAAY,EAAA;AAAA,EACjB,UAAU;AAAA,EACV,aAAa;AACf,IAAkC,IAAI;AAChC,MAAA,cAAc,CAAC,IAAI,QAAQ,GAAG,MAAM,EAAE,KAAK,CAAA,SAAQ,SAAS,EAAE,GAAG;AAC7D,UAAA,IAAI,MAAM,yDAAyD;AAAA,EAC3E;AAEA,QAAM,aAAa,IAAIC,aAAA,EAAc,EAAE,KAAK,GAAI,CAAA;AAAA,EAQhD,MAAM,QAAQ;AAAA,IAOZ,cAAc;AANN;AAEA;AAEA;AAGN,WAAK,YAAY;AACjB,WAAK,aAAa;AAClB,WAAK,aAAa;AAAA,IACpB;AAAA,IAEQ,OAAOC,MAAa;AAC1B,aAAO,GAAG,KAAK,SAAS,GAAGA,IAAG,GAAG;IACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASA,IAAIA,MAAa,OAAY,SAAwB,SAAS;AACxD,UAAA;AACI,cAAA,aAAa,KAAK,UAAU;AAAA,UAChC;AAAA,UACA,MAAM,KAAK,IAAI;AAAA,UACf,QAAQ,CAACC,SAAAA,EAAc,MAAM,KAAQ,oBAAA,KAAO,GAAA,QAAY,IAAA,SAAS,MAAO;AAAA,QAAA,CACzE;AACD,cAAM,iBAAiB,KAAK,aAAa,KAAK,WAAW,aAAa,UAAU,IAAI;AACpFC,sBAAA,EAAI,eAAe,KAAK,OAAOF,IAAG,GAAG,cAAc;AAAA,eAC5C,KAAK;AACZ,cAAM,IAAI,MAAM,yBAAyB,GAAG,EAAE;AAAA,MAChD;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQA,IAAaA,MAAa,MAAW,MAAS;AAC5C,YAAM,MAAME,cAAAA,EAAI,eAAe,KAAK,OAAOF,IAAG,CAAC;AAC/C,UAAI,CAAC;AACI,eAAA;AAEL,UAAA;AACF,cAAM,SAAS,KAAK,aAAa,KAAK,WAAW,aAAa,GAAG,IAAI;AAC/D,cAAA,OAAO,KAAK,MAAM,MAAM;AACxB,cAAA,EAAE,OAAO,OAAW,IAAA;AACtB,YAAAC,SAAAA,EAAc,MAAM,KAAK,8BAAa,KAAK,GAAE,WAAW;AAC1D,eAAK,OAAOD,IAAG;AACR,iBAAA;AAAA,QACT;AACO,eAAA;AAAA,eAEA,GAAG;AACH,eAAA;AAAA,MACT;AAAA,IACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA,OAAOA,MAAa;AAClBE,oBAAAA,EAAI,kBAAkB,KAAK,OAAOF,IAAG,CAAC;AAAA,IACxC;AAAA;AAAA;AAAA;AAAA,IAKA,QAAc;AACZE,oBAAA,EAAI,iBAAiB;AAAA,IACvB;AAAA,EACF;AACA,SAAO,IAAI,QAAQ;AACrB;AAAA,QAAA,IAAA;"}