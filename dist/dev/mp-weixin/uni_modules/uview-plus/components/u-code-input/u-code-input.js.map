{"version":3,"file":"u-code-input.js","sources":["../../../../../../../src/uni_modules/uview-plus/components/u-code-input/u-code-input.vue","../../../../../../../uniComponent:/RDovdHkvbWVkaWNhbC1kZXZpY2Uvc3JjL3VuaV9tb2R1bGVzL3V2aWV3LXBsdXMvY29tcG9uZW50cy91LWNvZGUtaW5wdXQvdS1jb2RlLWlucHV0LnZ1ZQ"],"sourcesContent":["<template>\r\n\t<view class=\"u-code-input\">\r\n\t\t<view\r\n\t\t\tclass=\"u-code-input__item\"\r\n\t\t\t:style=\"[itemStyle(index)]\"\r\n\t\t\tv-for=\"(item, index) in codeLength\"\r\n\t\t\t:key=\"index\"\r\n\t\t>\r\n\t\t\t<view\r\n\t\t\t\tclass=\"u-code-input__item__dot\"\r\n\t\t\t\tv-if=\"dot && codeArray.length > index\"\r\n\t\t\t></view>\r\n\t\t\t<text\r\n\t\t\t\tv-else\r\n\t\t\t\t:style=\"{\r\n\t\t\t\t\tfontSize: addUnit(fontSize),\r\n\t\t\t\t\tfontWeight: bold ? 'bold' : 'normal',\r\n\t\t\t\t\tcolor: color\r\n\t\t\t\t}\"\r\n\t\t\t>{{codeArray[index]}}</text>\r\n\t\t\t<view\r\n\t\t\t\tclass=\"u-code-input__item__line\"\r\n\t\t\t\tv-if=\"mode === 'line'\"\r\n\t\t\t\t:style=\"[lineStyle]\"\r\n\t\t\t></view>\r\n\t\t\t<!-- #ifndef APP-NVUE -->\r\n\t\t\t<view v-if=\"isFocus && codeArray.length === index\"\r\n\t\t\t\t:style=\"{backgroundColor: color}\" class=\"u-code-input__item__cursor\"></view>\r\n\t\t\t<!-- #endif -->\r\n\t\t\t<!-- #ifdef APP-NVUE -->\r\n\t\t\t <view v-if=\"isFocus && codeArray.length === index\"\r\n\t\t\t :style=\"{backgroundColor: color, opacity: opacity}\" class=\"u-code-input__item__cursor\"></view>\r\n\t\t\t<!-- #endif -->\r\n\t\t</view>\r\n\t\t<input\r\n\t\t\t:disabled=\"disabledKeyboard\"\r\n\t\t\ttype=\"number\"\r\n\t\t\t:focus=\"focus\"\r\n\t\t\t:value=\"inputValue\"\r\n\t\t\t:maxlength=\"maxlength\"\r\n\t\t\t:adjustPosition=\"adjustPosition\"\r\n\t\t\tclass=\"u-code-input__input\"\r\n\t\t\t@input=\"inputHandler\"\r\n\t\t\t:style=\"{\r\n\t\t\t\theight: addUnit(size)\r\n\t\t\t}\"\r\n\t\t\t@focus=\"isFocus = true\"\r\n\t\t\t@blur=\"isFocus = false\"\r\n\t\t/>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport { props } from './props';\r\n\timport { mpMixin } from '../../libs/mixin/mpMixin';\r\n\timport { mixin } from '../../libs/mixin/mixin';\r\n\timport { addUnit, getPx } from '../../libs/function/index';\r\n\t/**\r\n\t * CodeInput 验证码输入\r\n\t * @description 该组件一般用于验证用户短信验证码的场景，也可以结合uview-plus的键盘组件使用\r\n\t * @tutorial https://ijry.github.io/uview-plus/components/codeInput.html\r\n\t * @property {String | Number}\tmaxlength\t\t\t最大输入长度 （默认 6 ）\r\n\t * @property {Boolean}\t\t\tdot\t\t\t\t\t是否用圆点填充 （默认 false ）\r\n\t * @property {String}\t\t\tmode\t\t\t\t显示模式，box-盒子模式，line-底部横线模式 （默认 'box' ）\r\n\t * @property {Boolean}\t\t\thairline\t\t\t是否细边框 （默认 false ）\r\n\t * @property {String | Number}\tspace\t\t\t\t字符间的距离 （默认 10 ）\r\n\t * @property {String | Number}\tvalue\t\t\t\t预置值\r\n\t * @property {Boolean}\t\t\tfocus\t\t\t\t是否自动获取焦点 （默认 false ）\r\n\t * @property {Boolean}\t\t\tbold\t\t\t\t字体和输入横线是否加粗 （默认 false ）\r\n\t * @property {String}\t\t\tcolor\t\t\t\t字体颜色 （默认 '#606266' ）\r\n\t * @property {String | Number}\tfontSize\t\t\t字体大小，单位px （默认 18 ）\r\n\t * @property {String | Number}\tsize\t\t\t\t输入框的大小，宽等于高 （默认 35 ）\r\n\t * @property {Boolean}\t\t\tdisabledKeyboard\t是否隐藏原生键盘，如果想用自定义键盘的话，需设置此参数为true （默认 false ）\r\n\t * @property {String}\t\t\tborderColor\t\t\t边框和线条颜色 （默认 '#c9cacc' ）\r\n\t * @property {Boolean}\t\t\tdisabledDot\t\t\t是否禁止输入\".\"符号 （默认 true ）\r\n\t * \r\n\t * @event {Function}\tchange\t输入内容发生改变时触发，具体见上方说明\t\t\tvalue：当前输入的值\r\n\t * @event {Function}\tfinish\t输入字符个数达maxlength值时触发，见上方说明\tvalue：当前输入的值\r\n\t * @example\t<u-code-input v-model=\"value4\" :focus=\"true\"></u-code-input>\r\n\t */\r\n\texport default {\r\n\t\tname: 'u-code-input',\r\n\t\tmixins: [mpMixin, mixin, props],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tinputValue: '',\r\n\t\t\t\tisFocus: this.focus,\r\n\t\t\t\ttimer: null,\r\n\t\t\t\topacity: 1\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t// #ifdef VUE2\r\n\t\t\tvalue: {\r\n\t\t\t\timmediate: true,\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\t// 转为字符串，超出部分截掉\r\n\t\t\t\t\tthis.inputValue = String(val).substring(0, this.maxlength)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// #endif\r\n\t\t\t// #ifdef VUE3\r\n\t\t\tmodelValue: {\r\n\t\t\t\timmediate: true,\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\t// 转为字符串，超出部分截掉\r\n\t\t\t\t\tthis.inputValue = String(val).substring(0, this.maxlength)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// #endif\r\n\t\t\tisFocus: {\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\t// #ifdef APP-NVUE\r\n\t\t\t\t\tif (val) {\r\n\t\t\t\t\t\tthis.timer = setInterval(() => {\r\n\t\t\t\t\t\t\tthis.opacity = Math.abs(this.opacity - 1)\r\n\t\t\t\t\t\t}, 600)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tclearInterval(this.timer)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// #endif\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t\r\n\t\t},\r\n\t\tbeforeUnmount() {\r\n\t\t\t// #ifdef APP-NVUE\r\n\t\t\tclearInterval(this.timer)\r\n\t\t\t// #endif\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t// 根据长度，循环输入框的个数，因为头条小程序数值不能用于v-for\r\n\t\t\tcodeLength() {\r\n\t\t\t\treturn new Array(Number(this.maxlength))\r\n\t\t\t},\r\n\t\t\t// 循环item的样式\r\n\t\t\titemStyle() {\r\n\t\t\t\treturn index => {\r\n\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\twidth: addUnit(this.size),\r\n\t\t\t\t\t\theight: addUnit(this.size)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// 盒子模式下，需要额外进行处理\r\n\t\t\t\t\tif (this.mode === 'box') {\r\n\t\t\t\t\t\t// 设置盒子的边框，如果是细边框，则设置为0.5px宽度\r\n\t\t\t\t\t\tstyle.border = `${this.hairline ? 0.5 : 1}px solid ${this.borderColor}`\r\n\t\t\t\t\t\t// 如果盒子间距为0的话\r\n\t\t\t\t\t\tif (getPx(this.space) === 0) {\r\n\t\t\t\t\t\t\t// 给第一和最后一个盒子设置圆角\r\n\t\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\t\tstyle.borderTopLeftRadius = '3px'\r\n\t\t\t\t\t\t\t\tstyle.borderBottomLeftRadius = '3px'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (index === this.codeLength.length - 1) {\r\n\t\t\t\t\t\t\t\tstyle.borderTopRightRadius = '3px'\r\n\t\t\t\t\t\t\t\tstyle.borderBottomRightRadius = '3px'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// 最后一个盒子的右边框需要保留\r\n\t\t\t\t\t\t\tif (index !== this.codeLength.length - 1) {\r\n\t\t\t\t\t\t\t\tstyle.borderRight = 'none'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (index !== this.codeLength.length - 1) {\r\n\t\t\t\t\t\t// 设置验证码字符之间的距离，通过margin-right设置，最后一个字符，无需右边框\r\n\t\t\t\t\t\tstyle.marginRight = addUnit(this.space)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 最后一个盒子的有边框需要保留\r\n\t\t\t\t\t\tstyle.marginRight = 0\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn style\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 将输入的值，转为数组，给item历遍时，根据当前的索引显示数组的元素\r\n\t\t\tcodeArray() {\r\n\t\t\t\treturn String(this.inputValue).split('')\r\n\t\t\t},\r\n\t\t\t// 下划线模式下，横线的样式\r\n\t\t\tlineStyle() {\r\n\t\t\t\tconst style = {}\r\n\t\t\t\tstyle.height = this.hairline ? '2px' : '4px'\r\n\t\t\t\tstyle.width = addUnit(this.size)\r\n\t\t\t\t// 线条模式下，背景色即为边框颜色\r\n\t\t\t\tstyle.backgroundColor = this.borderColor\r\n\t\t\t\treturn style\r\n\t\t\t}\r\n\t\t},\r\n\t\temits: [\"change\", 'finish', \"update:modelValue\"],\r\n\t\tmethods: {\r\n\t\t\taddUnit,\r\n\t\t\t// 监听输入框的值发生变化\r\n\t\t\tinputHandler(e) {\r\n\t\t\t\tconst value = e.detail.value\r\n\t\t\t\tthis.inputValue = value\r\n\t\t\t\t// 是否允许输入“.”符号\r\n\t\t\t\tif(this.disabledDot) {\r\n\t\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\t\tthis.inputValue = value.replace('.', '')\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t// 未达到maxlength之前，发送change事件，达到后发送finish事件\r\n\t\t\t\tthis.$emit('change', value)\r\n\t\t\t\t// 修改通过v-model双向绑定的值\r\n\t\t\t\t// #ifdef VUE3\r\n                this.$emit(\"update:modelValue\", value);\r\n                // #endif\r\n                // #ifdef VUE2\r\n                this.$emit(\"input\", value);\r\n                // #endif\r\n\t\t\t\t// 达到用户指定输入长度时，发出完成事件\r\n\t\t\t\tif (String(value).length >= Number(this.maxlength)) {\r\n\t\t\t\t\tthis.$emit('finish', value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\t@import \"../../libs/css/components.scss\";\r\n\t$u-code-input-cursor-width: 1px;\r\n\t$u-code-input-cursor-height: 20px;\r\n\t$u-code-input-cursor-animation-duration: 1s;\r\n\t$u-code-input-cursor-animation-name: u-cursor-flicker;\r\n\r\n\t.u-code-input {\r\n\t\t@include flex;\r\n\t\tposition: relative;\r\n\t\toverflow: hidden;\r\n\r\n\t\t&__item {\r\n\t\t\t@include flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\tposition: relative;\r\n\r\n\t\t\t&__text {\r\n\t\t\t\tfont-size: 15px;\r\n\t\t\t\tcolor: $u-content-color;\r\n\t\t\t}\r\n\r\n\t\t\t&__dot {\r\n\t\t\t\twidth: 7px;\r\n\t\t\t\theight: 7px;\r\n\t\t\t\tborder-radius: 100px;\r\n\t\t\t\tbackground-color: $u-content-color;\r\n\t\t\t}\r\n\r\n\t\t\t&__line {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\theight: 4px;\r\n\t\t\t\tborder-radius: 100px;\r\n\t\t\t\twidth: 40px;\r\n\t\t\t\tbackground-color: $u-content-color;\r\n\t\t\t}\r\n\t\t\t&__cursor {\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\t/* #ifndef APP-NVUE */\r\n\t\t\t\ttop: 50%;\r\n\t\t\t\tleft: 50%;\r\n\t\t\t\topacity: 1;\r\n\t\t\t\ttransform: translate(-50%,-50%);\r\n\t\t\t\t/* #endif */\r\n\t\t\t\twidth: $u-code-input-cursor-width;\r\n\t\t\t\theight: $u-code-input-cursor-height;\r\n\t\t\t\tanimation: $u-code-input-cursor-animation-duration u-cursor-flicker infinite;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t&__input {\r\n\t\t\t// 之所以需要input输入框，是因为有它才能唤起键盘\r\n\t\t\t// 这里将它设置为两倍的屏幕宽度，再将左边的一半移出屏幕，为了不让用户看到输入的内容\r\n\t\t\tposition: absolute;\r\n\t\t\tleft: -750rpx;\r\n\t\t\twidth: 1500rpx;\r\n\t\t\ttop: 0;\r\n\t\t\tbackground-color: transparent;\r\n\t\t\ttext-align: left;\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* #ifndef APP-NVUE */\r\n\t@keyframes u-cursor-flicker {\r\n\t\t0% {\r\n\t\t    opacity: 0;\r\n\t\t}\r\n\t\t50% {\r\n\t\t    opacity: 1;\r\n\t\t}\r\n\t\t100% {\r\n\t\t    opacity: 0;\r\n\t\t}\r\n\t}\r\n\t/* #endif */\r\n\r\n</style>\r\n","import Component from 'D:/ty/medical-device/src/uni_modules/uview-plus/components/u-code-input/u-code-input.vue'\nwx.createComponent(Component)"],"names":["mpMixin","mixin","props","addUnit","getPx"],"mappings":";AAyDC,MAAA,oDAAA,QAAA,YAAA,GAAA,2CAAA,QAAA,6BAAA,GAAA,yCAAA,QAAA,2BAAA,GAAA,4CAAA,QAAA,8BAAA,GAAA,gBAAA,QAAA,8BAAA;AAuBA,MAAK,YAAU;AAAA,EACd,MAAM;AAAA,EACN,QAAQ,CAACA,yCAAAA,GAASC,uCAAK,GAAEC,mDAAK;AAAA,EAC9B,OAAO;AACN,WAAO;AAAA,MACN,YAAY;AAAA,MACZ,SAAS,KAAK;AAAA,MACd,OAAO;AAAA,MACP,SAAS;AAAA,IACV;AAAA,EACA;AAAA,EACD,OAAO;AAAA,IAWN,YAAY;AAAA,MACX,WAAW;AAAA,MACX,QAAQ,KAAK;AAEZ,aAAK,aAAa,OAAO,GAAG,EAAE,UAAU,GAAG,KAAK,SAAS;AAAA,MAC1D;AAAA,IACA;AAAA,IAED,SAAS;AAAA,MACR,QAAQ,KAAK;AAAA,MAUb;AAAA,IACD;AAAA,EACA;AAAA,EACD,UAAU;AAAA,EAET;AAAA,EACD,gBAAgB;AAAA,EAIf;AAAA,EACD,UAAU;AAAA;AAAA,IAET,aAAa;AACZ,aAAO,IAAI,MAAM,OAAO,KAAK,SAAS,CAAC;AAAA,IACvC;AAAA;AAAA,IAED,YAAY;AACX,aAAO,WAAS;AACf,cAAM,QAAQ;AAAA,UACb,OAAOC,0CAAAA,EAAQ,KAAK,IAAI;AAAA,UACxB,QAAQA,0CAAAA,EAAQ,KAAK,IAAI;AAAA,QAC1B;AAEA,YAAI,KAAK,SAAS,OAAO;AAExB,gBAAM,SAAS,GAAG,KAAK,WAAW,MAAM,CAAC,YAAY,KAAK,WAAW;AAErE,cAAIC,4CAAM,KAAK,KAAK,MAAM,GAAG;AAE5B,gBAAI,UAAU,GAAG;AAChB,oBAAM,sBAAsB;AAC5B,oBAAM,yBAAyB;AAAA,YAChC;AACA,gBAAI,UAAU,KAAK,WAAW,SAAS,GAAG;AACzC,oBAAM,uBAAuB;AAC7B,oBAAM,0BAA0B;AAAA,YACjC;AAEA,gBAAI,UAAU,KAAK,WAAW,SAAS,GAAG;AACzC,oBAAM,cAAc;AAAA,YACrB;AAAA,UACD;AAAA,QACD;AACA,YAAI,UAAU,KAAK,WAAW,SAAS,GAAG;AAEzC,gBAAM,cAAcD,4CAAQ,KAAK,KAAK;AAAA,eAChC;AAEN,gBAAM,cAAc;AAAA,QACrB;AAEA,eAAO;AAAA,MACR;AAAA,IACA;AAAA;AAAA,IAED,YAAY;AACX,aAAO,OAAO,KAAK,UAAU,EAAE,MAAM,EAAE;AAAA,IACvC;AAAA;AAAA,IAED,YAAY;AACX,YAAM,QAAQ,CAAC;AACf,YAAM,SAAS,KAAK,WAAW,QAAQ;AACvC,YAAM,QAAQA,4CAAQ,KAAK,IAAI;AAE/B,YAAM,kBAAkB,KAAK;AAC7B,aAAO;AAAA,IACR;AAAA,EACA;AAAA,EACD,OAAO,CAAC,UAAU,UAAU,mBAAmB;AAAA,EAC/C,SAAS;AAAA,IACR,SAAAA,0CAAO;AAAA;AAAA,IAEP,aAAa,GAAG;AACf,YAAM,QAAQ,EAAE,OAAO;AACvB,WAAK,aAAa;AAElB,UAAG,KAAK,aAAa;AACpB,aAAK,UAAU,MAAM;AACpB,eAAK,aAAa,MAAM,QAAQ,KAAK,EAAE;AAAA,SACvC;AAAA,MACF;AAEA,WAAK,MAAM,UAAU,KAAK;AAGd,WAAK,MAAM,qBAAqB,KAAK;AAMjD,UAAI,OAAO,KAAK,EAAE,UAAU,OAAO,KAAK,SAAS,GAAG;AACnD,aAAK,MAAM,UAAU,KAAK;AAAA,MAC3B;AAAA,IACD;AAAA,EACD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzND,GAAG,gBAAgB,SAAS;"}